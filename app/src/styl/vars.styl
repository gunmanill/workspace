support-for-ie = true
has-canvas = true

$page-max = 1260px;
$page-min = 1020px;

$column-width = 17.5em;   /* 280px */
$page-padding = 0 1.25em; /* 0 20px */
$min-width = 37.5em;      /* 600px */
$max-width = 58.75em;     /* 900px */

$ava-padding = 5.6em;
ava-padding() {
  padding: 1.4em 0 0;
  padding-left: $ava-padding;
  padding-right: $page-padding[1];
}

$black = #333;
$blue = #1f609f;
$gray = #a8abba;
$gray-l = #d3d6d8;
$white = #fff;
$orange = #ffaa00;
$color-separator = #d6d7d9;
$green = #61a427;
$red = #ce1900;

/*
old colors
  $black = #360A0B;
  $blue = #1f609f;
  $gray = #a8abba;
  $gray-l = #d3d6d8;
  $white = #fff;
  $orange = #ffaa00;
  $color-separator = #d6d7d9;
  $green = #3b983a;
*/

$small = .75em; /* 12px */
$medium = .9em; /* 14px */
$large = 1.1em; /* 18px */
$big = 1.5em;   /* 24px */

/*
 * Vendor "display: box" support.
 */
display(type)
  if box == type
    display: vendor-value(type)
  else
    display: type
  if  inline-block == type and support-for-ie
    zoom: 1
    *display: inline


.hide {
  display: none;
}

color-button(name, color1, color2) {

  bg = (color2/2 + color1/2);
  t = (color1 - 6%);
  b = (color2 - 20%);

  &-{name} {

    color: $white;
    text-shadow: 0 -1px 1px rgba($black, .40);

    background: bg;
    background: rgba(bg, .9);
    border-color: t (t/2 + b/2) b;
    gradient(top, rgba(color1, .9), rgba(color2, .9));

    &:hover {
      background-color: color1 + 10%;
      gradient(top, (color1 + 10%), (color2 + 10%));
    }

    &:active{
      background-color: color1 - 5%;
      gradient(top, (color1 - 5%), color2);
      box-shadow: inset 0px 2px 1px rgba(77, 53, 3, 0.15);
    }


    &.disabled,
    &[disabled] {
      opacity: 0.4;

      &:hover,
      &:active {
        background-color: color1;
        gradient(top, color1, color2);
      }
    }

    &.pressed {
      background: bg;
      box-shadow: inset 0 -.5em .5em .1em (color2 + 23%)
      
      .btn__text {
        color: $black;
      }
    }

    .btn__text {
      color: $white;
    }

		&.btn-without_bg {
			border-radius : 0;
			background : none;
			color:color1;
			text-shadow : none;
		}
  }
}

gradient(pos, colors...) {
  & {
    if length(colors) == 2 {
      background: linear-gradient(pos, colors[0], colors[1]);
    } else {
      background: linear-gradient(pos, colors[0], colors[1], colors[2]);
    }
  }
//Math.floor(0.6 * 255).toString(16);
  .lt-ie10 & {
    filter: s('progid:DXImageTransform.Microsoft.Gradient(StartColorStr=%s, EndColorStr=%s)', rgba(colors[0][0], 1), rgba(last(colors)[0], 1));
    zoom: 1;
  }
}

image-url(file){
  return url('images/' + file + '?' + math-random(file))
}

